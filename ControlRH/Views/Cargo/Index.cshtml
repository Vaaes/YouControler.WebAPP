@model CargoViewModel
@{
    ViewData["Title"] = "Index";
}

<div>
    <div>
        <form asp-controller="Cargo" asp-action="GetCargo" method="get">
            <div class="card">
                <div class="card-header">
                    Filtros
                </div>
                <div class="card-body">
                    <div class="row g-2">
                        <div class="col-md">
                            <label>Nome do Cargo</label>
                            <select class="form-control" id="" asp-for="Nome_Cargo">
                                <option value="">-- SELECIONAR --</option>
                                @foreach (var item in Model.ItensToSelect)
                                {
                                    <option value="@item.Nome_Cargo">@item.Nome_Cargo</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <button type="submit" id="btn-filtra" class="btn btn-sm btn-primary float-right">Filtrar</button>
                    <button type="button" id="btn-insert" class="btn btn-sm btn-success float-right btn-margin">Incluir</button>
                </div>
            </div>
        </form>

        <br />
        <hr />
        <br />

        <table id="grid" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>Cargo</th>
                    <th>Descrição</th>
                    <th class="nosort"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Itens)
                {
                    <tr>
                        <td>@item.Nome_Cargo</td>
                        <td>@item.Descricao_Cargo</td>
                        <td class="td-th-icon-size nosort text-center">
                            <a class="btn-edit" data-toggle="tooltip" data-placement="top" onclick="OpenUpdateModal(@item.ID,'@item.Nome_Cargo', '@item.Descricao_Cargo')" title="Editar cargo"><i class="fas fa-edit td-icon text-success"></i></a>
                            <a class="btn-excluir" data-toggle="tooltip" data-placement="top" onclick="VerificaCargoPerfil(@item.ID, '@item.Nome_Cargo')" title="Excluir cargo"><i class="fas fa-trash td-icon text-danger"></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="modal" id="modal-insert">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Inserir</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="row g-2">
                            <div class="col-md">
                                <label>Nome do Cargo<span class="text-danger">*</span></label>
                                <input type="text" class="form-control" onchange="OnChangeValidation(this)" autocomplete="off" id="nome-cargo-insert">
                            </div>
                        </div>

                        <div class="row g-2">
                            <div class="col-md">
                                <label>Descrição do Cargo<span class="text-danger">*</span></label>
                                <textarea type="text" class="form-control" onchange="OnChangeValidation(this)" autocomplete="off" id="descricao-cargo-insert"></textarea>
                            </div>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" id="btn-inserir-cancelar" data-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-success" id="btn-salvar-perfil" onclick="InsertCargoData();">Salvar</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal" id="modal-update">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Alterar</h4>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <input hidden id="id-update" />
                        <div class="row g-2">
                            <div class="col-md">
                                <label>Nome do Cargo<span class="text-danger">*</span></label>
                                <input type="text" class="form-control"  onchange="OnChangeValidation(this)" autocomplete="off" id="nome-cargo-update">
                            </div>
                        </div>
                        <div class="row g-2">
                            <div class="col-md">
                                <label>Descrição do Cargo<span class="text-danger">*</span></label>
                                <textarea type="text" class="form-control" onchange="OnChangeValidation(this)" autocomplete="off" id="descricao-cargo-update"></textarea>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Cancelar</button>
                        <button type="button" class="btn btn-success" id="btn-editar-perfil" onclick="UpdateCargoData();">Salvar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $('#grid').DataTable();

        $("#btn-filtra").hide();
        $("#btn-insert").hide();
        $(".btn-edit").hide();
        $(".btn-excluir").hide();

        HasPermission(3);
    });

    $("#btn-insert").click(function () {
        $('#modal-insert').modal('show');
    });


    function ValidateBeforeInsert() {
        var model = {
            Nome_Cargo: $('#nome-cargo-insert'),
            Descricao_Cargo: $('#descricao-cargo-insert')
        }

        var valida = true

        $.each(model, function (i, item) {
            if (item.val() == "") {
                item.css("border-color", "red")
                valida = false
            }
        })

        return valida;
    }

    function ValidateBeforeUpdate() {
        var model = {
            Nome_Cargo: $('#nome-cargo-update'),
            Descricao_Cargo: $('#descricao-cargo-update')
        }

        var valida = true

        $.each(model, function (i, item) {
            if (item.val() == "") {
                item.css("border-color", "red")
                valida = false
            }
        })

        return valida;
    }


    function OnChangeValidation(campo) {
        if ($(campo).val() != "") {
            $(campo).css("border-color", "")
        }
    }



    function OpenUpdateModal(Id, NomeCargo, DescCargo) {
        $('#modal-update').modal('show');
        $("#id-update").val(Id);
        $('#nome-cargo-update').val(NomeCargo);
        $('#descricao-cargo-update').val(DescCargo);
    }

    function InsertCargoData() {
        var model = {
            Nome_Cargo: $('#nome-cargo-insert').val(),
            Descricao_Cargo: $('#descricao-cargo-insert').val()
        }
        if (ValidateBeforeInsert()) {
            AjaxHelper('POST', '/Cargo/CreateCargo', model, function (result) {
                if (result) {
                    configureSweetSuccess("Cargo inserido com Sucesso", "/Cargo/Index")
                }
                else {
                    configureSweetError('error');
                }
            })
        }
    }

    function UpdateCargoData() {
        var model = {
            ID: $("#id-update").val(),
            Nome_Cargo: $('#nome-cargo-update').val(),
            Descricao_Cargo: $('#descricao-cargo-update').val()
        };

        if (ValidateBeforeUpdate()) {
            AjaxHelper('PUT', '/Cargo/UpdateCargo', model, function (result) {
                if (result) {
                    configureSweetSuccess("Cargo alterado com Sucesso", "/Cargo/Index")
                }
                else {
                    configureSweetError('error');
                }
            })
        }
    }

    function DeleteCargoAjax(id) {
        var model = {
            Id: id,
        };
        AjaxHelper('DELETE', '/Cargo/DeleteCargo', model, function (result) {
            if (result) {
                configureSweetSuccess("Cargo deletado com sucesso!", "/Cargo/Index")
            }
            else {
                configureSweetError('error');
            }
        })
    }

    function DeleteCargoData(id, NomeCargo) {
        Swal.fire({
            title: NomeCargo,
            text: "Tem certeza que deseja remover o Cargo " + NomeCargo + "?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#28a745',
            cancelButtonColor: '#dc3545',
            confirmButtonText: 'Sim, deletar!'
        }).then((result) => {
            if (result.isConfirmed) {
                DeleteCargoAjax(id)
            }
        })
    }

    function VerificaCargoPerfil(id, role) {
        var model = {
            IdCargo: id,
        };

        AjaxHelper('GET', '/Cargo/VerificaFuncionarioByIdCargo', model, function (result) {
            if (result) {
                DeleteCargoData(id, role)
            }
            else {
                Swal.fire({
                    title: role,
                    text: "O Cargo: " + role + " está vinculado a algum funcionário, portanto não é possivel deleta-lo!",
                    icon: 'warning',
                    showCancelButton: false,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Okay!'
                })
            }
        })
    }

</script>