@model DepartamentoViewModel
@{
    ViewData["Title"] = "Index";
}

<body>
    <div>
        <div>
            <form id="form" asp-controller="Departamentos" asp-action="FiltroDepartamento" method="post">
                <div class="card">
                    <div class="card-header">
                        Filtros
                    </div>
                    <div class="card-body">
                        <div class="row g-2">
                            <div class="col-md">
                                <label for="floatingInputGrid">Nome do Departamento</label>
                                <select class="form-control" asp-for="NomeDepartamento" id="SelectDepartamento">
                                    <option value="">-- SELECIONAR --</option>
                                    @foreach (var item in Model.itensReturnToSelect)
                                    {
                                        <option value="@item.NomeDepartamento">@item.NomeDepartamento</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md">
                            <label for="floatingInputGrid" hidden>Gestor do Departamento</label>
                            <input type="text" autocomplete="off" asp-for="GestorDepartamento" class="form-control" id="Descricao-Departamento" hidden>
                        </div>
                    </div>
                    <div class="card-footer">
                        <button type="submit" class="btn btn-sm btn-primary float-right" id="Filtro-Departamento">Filtrar</button>
                        <button type="button" id="insert-departamento" class="btn btn-sm btn-success float-right btn-margin">Incluir</button>
                    </div>
                </div>
            </form>

            <br />
            <hr />
            <br />

            @if (Model.itensReturnToTable != null)
            {
                <div class="table-responsive">
                    <table id="grid" class="table table-striped table-bordered" style="width:100%">
                        <thead>
                            <tr>
                                <th>Nome Departamento</th>
                                <th>Gestor do Departamento</th>
                                <th>Andar</th>
                                <th>Sala</th>
                                <th class="td-th-icon-size"></th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.itensReturnToTable)
                            {
                                <tr>
                                    <td>@item.NomeDepartamento</td>
                                    <td>@item.GestorDepartamento</td>
                                    <td>@item.Andar</td>
                                    <td>@item.Sala</td>
                                    <td class="td-th-icon-size nosort text-center">
                                        <a onclick="EditDepartamento(@item.ID)"><i class="fas fa-edit td-icon text-success" data-toggle="tooltip" title="Editar um Departamento"></i></a>
                                        <a onclick="DeleteDepartamento(@item.ID , '@item.NomeDepartamento')"><i data-toggle="tooltip" title="Excluir um Departamento" class="fas fa-trash td-icon text-danger"></i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="modal-insert">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Inserir</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="row g-2">
                        <div class="col-md">
                            <label for="floatingInputGrid">Nome do Departamento</label>
                            <input type="text" autocomplete="off" onchange="OnChangeValidation(this)" id="nome-departamento-insert" class="form-control">
                        </div>
                        <div class="col-md">
                            <label for="floatingInputGrid">Gestor do Departamento</label>
                            <select class="col-sm-12 form-control" onchange="OnChangeValidation(this)" id="gestor-departamento-insert">
                                <option value="">-- SELECIONAR --</option>
                                @foreach (var item in Model.GestorReturnSelect)
                                {
                                    <option value="@item.Nome">@item.Nome</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row g-2">
                        <div class="col-md">
                            <label for="floatingInputGrid">Andar do Departamento</label>
                            <input type="text" autocomplete="off" id="andar-departamento-insert" onchange="OnChangeValidation(this)" class="form-control">
                        </div>
                        <div class="col-md">
                            <label for="floatingInputGrid">Sala do Departamento</label>
                            <input type="text" autocomplete="off" id="sala-departamento-insert" onchange="OnChangeValidation(this)" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" id="btn-inserir-cancelar" data-dismiss="modal">Cancelar</button>
                    <button type="submit" onclick="InsertDepartamentoData();" class="btn btn-success float-end col-xs-2">Inserir</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Edit -->
    <div class="modal fade" id="modal-update">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Alterar</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="row g-2">
                        <input hidden id="id-Departamento" />
                        <div class="col-md">
                            <label for="floatingInputGrid">Nome do Departamento</label>
                            <input type="text" autocomplete="off" onchange="OnChangeValidation(this)" class="form-control" id="nome-Departamento">
                        </div>
                        <div class="col-md">
                            <label for="floatingInputGrid">Gestor do Departamento</label>
                            <select class="col-sm-12 form-control" onchange="OnChangeValidation(this)" id="gestor-Departamento">
                                <option value="">-- SELECIONAR --</option>
                                @foreach (var item in Model.GestorReturnSelect)
                                {
                                    <option value="@item.Nome">@item.Nome</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row g-2">
                        <div class="col-md">
                            <label for="floatingInputGrid">Andar do Departamento</label>
                            <input type="text" autocomplete="off" class="form-control" onchange="OnChangeValidation(this)" id="andar-Departamento">
                        </div>
                        <div class="col-md">
                            <label for="floatingInputGrid">Sala do Departamento</label>
                            <input type="text" autocomplete="off" class="form-control" onchange="OnChangeValidation(this)" id="sala-Departamento">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" id="btn-inserir-cancelar" data-dismiss="modal">Cancelar</button>
                    <button type="button" onclick="UpdateDepartamentoData()" class="btn btn-success float-end col-xs-2" id="EditDepartamento" value="Editar">Editar</button>
                </div>
            </div>
        </div>
    </div>

</body>
<script type="text/javascript">

    $(document).ready(function () {
        $('#grid').DataTable();

        $("#btn-filtra").hide();
        $("#btn-insert").hide();
        $(".btn-edit").hide();
        $(".btn-excluir").hide();

        HasPermission(2);
    });

    $("#insert-departamento").click(function () {
        $('#modal-insert').modal('show');
    });

    function OnChangeValidation(campo) {
        if ($(campo).val() != "") {
            $(campo).css("border-color", "")
        }
    }

    function EditDepartamento(ID) {
        $('#modal-update').modal('show');
        $.ajax({
            type: 'GET',
            url: "/Departamentos/ReturnDadosDepartamentoEdit",
            data: { id: ID },
            success: function (result) {
                $.each(result, function (i, item) {
                    $("#id-Departamento").val(item.id)
                    $("#nome-Departamento").val(item.nomeDepartamento)
                    $("#gestor-Departamento").val(item.gestorDepartamento)
                    $("#andar-Departamento").val(item.andar)
                    $("#sala-Departamento").val(item.sala)
                })
            },
            error: function (error) {
                console.log(error);
            }
        });
    }

    function ValidateBeforeInsert() {
        var model = {
            NomeDepartamento: $("#nome-departamento-insert"),
            GestorDepartamento: $('#gestor-departamento-insert'),
            Andar: $('#andar-departamento-insert'),
            Sala: $('#sala-departamento-insert'),
        };

        var valida = true

        $.each(model, function (i, item) {
            console.log(item);
            if (item.val() == "") {
                item.css("border-color", "red")
                valida = false
            }
        })

        return valida;
    }

    function ValidateBeforeUpdate() {
        var model = {
            Id: $("#id-Departamento"),
            NomeDepartamento: $("#nome-Departamento"),
            GestorDepartamento: $('#gestor-Departamento'),
            Andar: $('#andar-Departamento'),
            Sala: $('#sala-Departamento'),
        };

        var valida = true

        $.each(model, function (i, item) {
            console.log(item);
            if (item.val() == "") {
                item.css("border-color", "red")
                valida = false
            }
        })

        return valida;
    }

    function InsertDepartamentoData() {
        var model = {
            NomeDepartamento: $("#nome-departamento-insert").val(),
            GestorDepartamento: $('#gestor-departamento-insert').val(),
            Andar: $('#andar-departamento-insert').val(),
            Sala: $('#sala-departamento-insert').val(),
        };

        if (ValidateBeforeInsert()) {
            AjaxHelper('POST', '/Departamentos/InsertDepartamento', model, function (result) {
                if (result) {
                    configureSweetSuccess("Departamento inserido com Sucesso", "/Departamentos/Index")
                }
                else {
                    configureSweetError('error');
                }
            })
        }
    }

    function UpdateDepartamentoData() {
        var model = {
            Id: $("#id-Departamento").val(),
            NomeDepartamento: $("#nome-Departamento").val(),
            GestorDepartamento: $('#gestor-Departamento').val(),
            Andar: $('#andar-Departamento').val(),
            Sala: $('#sala-Departamento').val(),
        };

        if (ValidateBeforeUpdate()) {
            AjaxHelper('PUT', '/Departamentos/EditDepartamento', model, function (result) {
                if (result) {
                    configureSweetSuccess("Departamento alterado com Sucesso", "/Departamentos/Index")
                }
                else {
                    configureSweetError('error');
                }
            })
        }
    }

    function DeleteDepartamentoAjax(id) {
        var model = {
            Id: id,
        };
        AjaxHelper('DELETE', '/Departamentos/DeleteDepartamento', model, function (result) {
            if (result) {
                configureSweetSuccess("Departamento deletado com sucesso!", "/Departamentos/Index")
            }
            else {
                configureSweetError('error');
            }
        })
    }

    function DeleteDepartamento(ID, Nome) {
        Swal.fire({
            title: Nome,
            text: "Tem certeza que deseja remover o Departamento: " + Nome + " ?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#28a745',
            cancelButtonColor: '#dc3545',
            confirmButtonText: 'Sim, deletar!'
        }).then((result) => {
            if (result.isConfirmed) {
                DeleteDepartamentoAjax(ID)
            }
        })
    }
</script>



